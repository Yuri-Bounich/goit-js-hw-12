{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["const API_KEY = '46054867-15d582c16d4d1b2cce4772636'\nconst BASE_URL = 'https://pixabay.com/api/'\n\nexport const fetchImages = query => {\n    return fetch(\n      `${BASE_URL}?key=${API_KEY}&q=${query}&image_type=photo&orientation=horizontal&safesearch=true`\n    )\n      .then(response => {\n        if (!response.ok) {\n          throw new Error(\n            `Error fetching images: ${response.status} ${response.statusText}`\n          );\n        }\n        return response.json();\n      })\n      .then(data => {\n        if (data.hits.length === 0) {\n          throw new Error('No images found for this query.');\n        }\n        return data.hits;\n      });\n  };\n\n","\nexport const renderImages = images => {\n    const gallery = document.querySelector('.gallery');\n    gallery.innerHTML = '';\n  \n    if (images.length === 0) {\n      iziToast.error({\n        title: 'Error',\n        message:\n          'Sorry, there are no images matching your search query. Please try again!',\n      });\n      return;\n    }\n  \n    const markup = images\n      .map(\n        ({\n          webformatURL,\n          largeImageURL,\n          tags,\n          likes,\n          views,\n          comments,\n          downloads,\n        }) => `\n              <li class=\"gallery-item\">\n                  <a href=\"${largeImageURL}\" class=\"gallery-link\">\n                      <img src=\"${webformatURL}\" alt=\"${tags}\" class=\"gallery-image\" />\n                  </a>\n                  <div class=\"info\">\n                      <p class=\"info-item\"><span class=\"info-item-total\">Likes</span> ${likes}</p>\n                      <p class=\"info-item\"><span class=\"info-item-total\">Views</span> ${views}</p>\n                      <p class=\"info-item\"><span class=\"info-item-total\">Comments</span> ${comments}</p>\n                      <p class=\"info-item\"><span class=\"info-item-total\">Downloads</span> ${downloads}</p>\n                  </div>\n              </li>\n          `\n      )\n      .join('');\n  \n    gallery.innerHTML = markup;\n  };\n  \n  export const showLoader = () => {\n    const loader = document.querySelector('.loader');\n    loader.style.display = 'block';\n  };\n  \n  export const hideLoader = () => {\n    const loader = document.querySelector('.loader');\n    loader.style.display = 'none';\n  };\n","import axios from 'axios';\n\n// Описаний у документації\nimport iziToast from \"izitoast\";\n// Додатковий імпорт стилів\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nimport { fetchImages } from './js/pixabay-api.js';\nimport { renderImages,  showLoader, hideLoader } from './js/render-functions.js';\n\n// Описаний у документації\nimport SimpleLightbox from \"simplelightbox\";\n// Додатковий імпорт стилів\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\n\nconst searchForm = document.querySelector('.form');\nconst galleryElement = document.querySelector('.gallery');\nconst gallery = new SimpleLightbox('.gallery a', { \n    captionsData: 'alt',\n    captionDelay: 250, });\n\nsearchForm.addEventListener('submit', event => {\n    //Запобігає перезавантаженню сторінки\n    event.preventDefault();\n  \n    // Отримуємо значення з поля запиту\n    const query = event.target.elements.query.value.trim();\n    // Перевіряємо, чи не є запит пустим\n    if (!query) {\n      return; // Якщо пустий, виходимо з обробника\n    }\n  \n    //Очищає попередні результати в галереї\n    galleryElement.innerHTML = '';\n\n    //Показує лоадер і викликає функцію fetchImages(query) для отримання зображень з API\n    showLoader();\n    //Відображає отримані зображення за допомогою renderImages() або показує помилку через iziToast\n    fetchImages(query)\n      .then(images => {\n        renderImages(images);\n        gallery.refresh();\n      })\n      .catch(error => {\n        console.error(error);\n        iziToast.error({\n          title: 'Error',\n          message:\n            'Sorry, there are no images matching your search query. Please try again!',\n        });\n      })\n      //Ховає лоадер після виконання\n      .finally(() => {\n        hideLoader();\n      });\n  \n      // Очищуємо поля форми\n      searchForm.reset(); \n    });\n\n"],"names":["API_KEY","BASE_URL","fetchImages","query","response","data","renderImages","images","gallery","markup","webformatURL","largeImageURL","tags","likes","views","comments","downloads","showLoader","loader","hideLoader","searchForm","galleryElement","SimpleLightbox","event","error","iziToast"],"mappings":"6vBAAA,MAAMA,EAAU,qCACVC,EAAW,2BAEJC,EAAcC,GAChB,MACL,GAAGF,CAAQ,QAAQD,CAAO,MAAMG,CAAK,0DACtC,EACE,KAAKC,GAAY,CAChB,GAAI,CAACA,EAAS,GACZ,MAAM,IAAI,MACR,0BAA0BA,EAAS,MAAM,IAAIA,EAAS,UAAU,EAC5E,EAEQ,OAAOA,EAAS,MACxB,CAAO,EACA,KAAKC,GAAQ,CACZ,GAAIA,EAAK,KAAK,SAAW,EACvB,MAAM,IAAI,MAAM,iCAAiC,EAEnD,OAAOA,EAAK,IACpB,CAAO,ECnBMC,EAAeC,GAAU,CAClC,MAAMC,EAAU,SAAS,cAAc,UAAU,EAGjD,GAFAA,EAAQ,UAAY,GAEhBD,EAAO,SAAW,EAAG,CACvB,SAAS,MAAM,CACb,MAAO,QACP,QACE,0EACV,CAAO,EACD,MACD,CAED,MAAME,EAASF,EACZ,IACC,CAAC,CACC,aAAAG,EACA,cAAAC,EACA,KAAAC,EACA,MAAAC,EACA,MAAAC,EACA,SAAAC,EACA,UAAAC,CACV,IAAc;AAAA;AAAA,6BAEeL,CAAa;AAAA,kCACRD,CAAY,UAAUE,CAAI;AAAA;AAAA;AAAA,wFAG4BC,CAAK;AAAA,wFACLC,CAAK;AAAA,2FACFC,CAAQ;AAAA,4FACPC,CAAS;AAAA;AAAA;AAAA,WAI9F,EACA,KAAK,EAAE,EAEVR,EAAQ,UAAYC,CACxB,EAEeQ,EAAa,IAAM,CAC9B,MAAMC,EAAS,SAAS,cAAc,SAAS,EAC/CA,EAAO,MAAM,QAAU,OAC3B,EAEeC,EAAa,IAAM,CAC9B,MAAMD,EAAS,SAAS,cAAc,SAAS,EAC/CA,EAAO,MAAM,QAAU,MACxB,ECpCGE,EAAa,SAAS,cAAc,OAAO,EAC3CC,EAAiB,SAAS,cAAc,UAAU,EAClDb,EAAU,IAAIc,EAAe,aAAc,CAC7C,aAAc,MACd,aAAc,GAAG,CAAG,EAExBF,EAAW,iBAAiB,SAAUG,GAAS,CAE3CA,EAAM,eAAc,EAGpB,MAAMpB,EAAQoB,EAAM,OAAO,SAAS,MAAM,MAAM,OAE3CpB,IAKLkB,EAAe,UAAY,GAG3BJ,IAEAf,EAAYC,CAAK,EACd,KAAKI,GAAU,CACdD,EAAaC,CAAM,EACnBC,EAAQ,QAAO,CACvB,CAAO,EACA,MAAMgB,GAAS,CACd,QAAQ,MAAMA,CAAK,EACnBC,EAAS,MAAM,CACb,MAAO,QACP,QACE,0EACZ,CAAS,CACT,CAAO,EAEA,QAAQ,IAAM,CACbN,GACR,CAAO,EAGDC,EAAW,MAAK,EACtB,CAAK"}